#!/bin/sh -e

if command -v nim; then
    nim_exe="$(command -v nim)"
else
    # Bootstrap nim.
    cd csources
    # Build nim source files
    sh ./build.sh
    cd "$OLDPWD"

    nim_exe="$PWD/bin/nim"
fi
# Build a release version of the "koch" maintenance program
$nim_exe compile --skipUserCfg --skipParentCfg --hints:off koch

# Build a release version of the nim compiler
./koch boot -d:release --skipUserCfg --skipParentCfg --hints:off

# Build nimsuggest, nimgrep, and nimpretty
./koch tools --skipUserCfg --skipParentCfg --hints:off

# Build nimrtl.nim
cd lib
$nim_exe c --app:lib -d:createNimRtl -d:release nimrtl.nim
cd "$OLDPWD"

#./koch install "$1"

install -d "$1/usr/lib"

cp -a lib      "$1/usr/lib/nim"
cp -a compiler "$1/usr/lib/nim"

install -Dm 644 compiler.nimble "$1"/usr/lib/nim/compiler
install -m 755 lib/libnimrtl.so "$1"/usr/lib/libnimrtl.so

install -Dm 644 config/* -t "$1"/etc/nim
install -Dm 755 bin/*    -t "$1"/usr/bin

# Workaround Nim's nonstandard header file placement
# (https://bugs.archlinux.org/task/50252)
mkdir -p "$1/usr/include"
cp -dpR "$1/usr/lib/nim/"*.h "$1"/usr/include/

# Nimble looks for nimscriptapi.nim in /usr/bin/nimblepkg/, of all places
mkdir -p "$1/usr/share/nimble"

# Copy everything to the right folder
cp -r dist/nimble/src/nimblepkg "$1/usr/share/nimble"

# Link the two folders
ln -s "/usr/share/nimble/" "$1/usr/bin/nimblepkg"
